// Code generated by Arduino IoT Cloud, DO NOT EDIT.

#include <ArduinoIoTCloud.h>
#include <Arduino_ConnectionHandler.h>

const char DEVICE_LOGIN_NAME[] = SECRET_LOGIN_NAME;

const char SSID[] = SECRET_SSID;          // Network SSID (name)
const char PASS[] = SECRET_OPTIONAL_PASS; // Network password (use for WPA, or
                                          // use as key for WEP)
const char DEVICE_KEY[] = SECRET_DEVICE_KEY; // Secret device password

void onTankFillScheduleChange();
void onTankTriggerFillChange();

float tankFillPercentage;
CloudLength tankLiquidHeight;
CloudSchedule tankFillSchedule;
bool tankFillScheduleStatus;
bool tankIsFilling;
bool tankTriggerFill;
CloudVolume tankVolumeCubicMeters;
CloudVolume tankVolumeLiters;

void initProperties() {

    ArduinoCloud.setBoardId(DEVICE_LOGIN_NAME);
    ArduinoCloud.setSecretDeviceKey(DEVICE_KEY);
    ArduinoCloud.addProperty(tankFillPercentage, READ, ON_CHANGE, NULL);
    ArduinoCloud.addProperty(tankLiquidHeight, READ, ON_CHANGE, NULL);
    ArduinoCloud.addProperty(tankFillSchedule, READWRITE, ON_CHANGE,
                             onTankFillScheduleChange);
    ArduinoCloud.addProperty(tankFillScheduleStatus, READ, ON_CHANGE, NULL);
    ArduinoCloud.addProperty(tankIsFilling, READ, ON_CHANGE, NULL);
    ArduinoCloud.addProperty(tankTriggerFill, READWRITE, ON_CHANGE,
                             onTankTriggerFillChange);
    ArduinoCloud.addProperty(tankVolumeCubicMeters, READ, ON_CHANGE, NULL);
    ArduinoCloud.addProperty(tankVolumeLiters, READ, ON_CHANGE, NULL);
}

WiFiConnectionHandler ArduinoIoTPreferredConnection(SSID, PASS);
